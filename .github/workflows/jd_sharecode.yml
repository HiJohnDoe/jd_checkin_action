
name: jd_sharecode 打印互助码 & 互助码自动上车

on:
  workflow_dispatch:
  # schedule:
  #   - cron: '20 18 * * *'
  # watch:
  #   types: started
  repository_dispatch:
    types: jd_sharecode
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: '打印互助码 & 互助码自动上车'
        run: |
          cd Scripts
          chmod +x jd_sharecodes.sh
          ./jd_sharecodes.sh
          cd ..

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node_modules
        uses: actions/cache@v2 # 使用 GitHub 官方的缓存 Action。
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }} # 使用 package-lock.json 的 Hash 作为缓存的 key。也可以使用 package.json 代替
      
      - name: '运行 jd_get_share_code'
        run: |
          cd Scripts
          npm install
          node jd_get_share_code.js

        env:
          JD_DEBUG: ${{ secrets.JD_DEBUG }}
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_USER_ID: ${{ secrets.TG_USER_ID }}
          JD_COOKIE: ${{ secrets.JD_COOKIE }}
          PETSHARECODES: ${{ secrets.PETSHARECODES }}
          FRUITSHARECODES: ${{ secrets.FRUITSHARECODES }}
          PLANT_BEAN_SHARECODES: ${{ secrets.PLANT_BEAN_SHARECODES }}
          SUPERMARKET_SHARECODES: ${{ secrets.SUPERMARKET_SHARECODES }}
          DDFACTORY_SHARECODES: ${{ secrets.DDFACTORY_SHARECODES }}
          JXFACTORY_SHARECODES: ${{ secrets.JXFACTORY_SHARECODES }}
          DREAM_FACTORY_SHARE_CODES: ${{ secrets.DREAM_FACTORY_SHARE_CODES }}
          JDZZ_INVITECODES: ${{ secrets.JDZZ_INVITECODES }}
          JDJOY_SHARECODES: ${{ secrets.JDJOY_SHARECODES }}
          JDCASH_SHARECODES: ${{ secrets.JDCASH_SHARECODES }}
  
